«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::webExtensions»
«EXTENSION template::associationExtensions»

«DEFINE genView FOR uml::Class»
	«FILE getWebPath() +"/list" +name+ "." + getExtension()»
		
		<ui:composition «EXPAND WebRoot::genIncludes» template="«getAdminTemplate()»"  >	
			
			«setAsCurrentEntity(this)-»
			«clearCurrentEmbeddable()-»
			<ui:define name="content">
				«EXPAND genFullTextBtn FOR this»
	
				<c:set var="modalId" value="«name»ModalPanel-«name»" />
				<ui:include src="search«name».«getExtension()»" />
				<br/> <br/>
				«IF !isAbstract»«EXPAND genButtons FOR this»«ENDIF»
				<div id="printable" >
				<ui:include src="list«name»Component.«getExtension()»"  >
					<ui:param name="records" value="#{«asVar()»List.resultList}" />
         		</ui:include>
         		</div>
				«IF !isAbstract»«EXPAND genButtons FOR this»«ENDIF»
				«IF !isAbstract»
				<ui:include src="«getComponentViewFile("modalDlg")»" >
					<ui:param name="modalId" value="${modalId}"/> 
				</ui:include>
				«ENDIF»
			</ui:define>
		</ui:composition>
			«ENDFILE»
			«EXPAND genViewComponent FOR this»
			«EXPAND auditListRoot::genAuditLogComponent FOR this»
			«IF !isAbstract»
				«EXPAND modelDlg::genModelDlgComponent FOR this»
			«ENDIF»
			
			«EXPAND genArchivedFile FOR this»
			
«ENDDEFINE»
		
«DEFINE genFullTextBtn FOR uml::Class»
 <h:form> 
	<h:commandButton  value="Full Text Search"
		action="textSearch">
		<s:conversationPropagation type="join" />
	</h:commandButton>
</h:form>
«ENDDEFINE»

«REM» Create the actual table component«ENDREM»
«DEFINE genViewComponent FOR uml::Class»
			«FILE getWebPath() +"/list" +name+ "Component." + getExtension()»
		<ui:composition «EXPAND WebRoot::genIncludes-» >	
		
		 <c:if test="${empty modalId}">
       		 <c:set var="modalId" value="«name»ModalPanel" />
    	</c:if>
    	
    	<c:if test="${empty listTitle}">
       		 <c:set var="listTitle" value="«name» Search Results (#{empty records ? 0 : («asVar()»List.paginated ? «asVar()»List.resultCount : records.size)})" />
    	</c:if>
    	
			
		<rich:panel>
		   <f:facet name="header">
		   		${listTitle}
		   </f:facet>
		   <a:form>
			
				<rich:dataTable  var="_«asVar()»" value="#{records}"  id="«name.toFirstLower()»List"
					rowClasses="odd, even" styleClass="dataTable" 
					     onRowMouseOver="this.style.backgroundColor='#F8F8F8'"
                        onRowMouseOut="this.style.backgroundColor='#{a4jSkin.tableBackgroundColor}'"
					 >	
				«EXPAND genId FOR this-»	
				«EXPAND genAttribAsOutput FOR this-»
				«EXPAND genPropsFromBusinessEntity FOR this-»
				«EXPAND genCreationDate FOR this-»	
				«EXPAND genLink("view", "eye.png") FOR this»
				«IF !isAbstract»
					«EXPAND genLink ("edit", "edit.png")FOR this»
					«EXPAND genDeleteLink FOR this»
					«EXPAND genQuickEditLink FOR this»
				«ENDIF»
				</rich:dataTable>
		 	</a:form>		
		</rich:panel>	
		
		«EXPAND paginationLinks FOR this»
		
		</ui:composition>
	«ENDFILE»
«ENDDEFINE»

«DEFINE genButtons FOR wcprofile::Entity»
	<a:form>
		<s:button value="Create New" view="«getViewFile("edit")»" propagation="none" >
			<f:param name="«asVar()»Id" value="0"/>
  			</s:button> 
				<a:commandButton action="#{«asVar()»Action.set«name»Id(0)}" 
				oncomplete="Richfaces.showModalPanel('${modalId}',{});" value="Quick Create" reRender="${modalId}" >
			</a:commandButton>
		<s:button value="Export to Excel" action="#{«asVar()»List.exportToCsv}" />
		</a:form>
		«IF templatable»
		 <s:button value="Create Template" view="«getTemplateViewFileName("edit")»"/>
		 «ENDIF»
«ENDDEFINE»


«DEFINE paginationLinks FOR wcprofile::Entity»
 <div class="tableControl">
<s:link
	view="#{request.servletPath}"
	rendered="#{«asVar()»List.previousExists}"
	value="#{messages.left}#{messages.left} First Page" >
	<f:param name="firstResult" value="0" />
</s:link> 

<s:link view="#{request.servletPath}"
	rendered="#{«asVar()»List.previousExists}"
	value="#{messages.left} Previous Page" >
	<f:param name="firstResult" value="#{«asVar()»List.previousFirstResult}" />
</s:link> 

<s:link view="#{request.servletPath}"
	rendered="#{«asVar()»List.nextExists}"
	value="Next Page #{messages.right}" >
	<f:param name="firstResult" value="#{«asVar()»List.nextFirstResult}" />
</s:link> 

<s:link view="#{request.servletPath}"
	rendered="#{«asVar()»List.nextExists}"
	value="Last Page #{messages.right}#{messages.right}" >
	<f:param name="firstResult" value="#{«asVar()»List.lastFirstResult}" />
</s:link>
</div>
«ENDDEFINE»

«DEFINE genPropsFromBusinessEntity FOR wcprofile::Entity»
    «REM»comment
	«IF fieldsFromSuperClass != null»	
	«EXPAND genProperty FOREACH getStringsAsList(fieldsFromSuperClass)»
	«ENDIF»
	«ENDREM»
«ENDDEFINE»



«DEFINE genAttribAsOutput FOR uml::Class-»
	«FOREACH allParents() AS e-»
	 «EXPAND genPropertyRec FOREACH e.getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()  ) -»
	«ENDFOREACH»
	«EXPAND genPropertyRec FOREACH getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()   ) -»
«ENDDEFINE»

«DEFINE genPropertyRec FOR uml::Property-»
	«IF isExpandableAssoc() -» 
		«setCurrentEmbeddable()-» 
		«EXPAND genPropertyRec FOREACH type.getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()  ) -»
		«clearCurrentEmbeddable()-»
	«ELSE-»
		«EXPAND genAttribute -»
	«ENDIF»
«ENDDEFINE»

«DEFINE genAttribute FOR uml::Property -»
	«IF association != null -»
		«EXPAND genAssociation FOR this-»
	«ELSE-»
		«EXPAND genProperty FOR this-»
	«ENDIF»
«ENDDEFINE»

«DEFINE genLink(String action, String icon) FOR uml::Class»
	<h:column  rendered="#{s:hasPermission('_«asVar()»', '«action»') and !_«asVar()»Category.archived}">
		<f:facet name="header">
			<h:outputText value=" " />
		</f:facet>
		<s:link view="«getViewFile(action)»"  rendered="#{s:hasPermission(_«asVar()», '«action»')}" propagation="none">
			<h:graphicImage value="/images/icons/«icon»" style="border: 0px" alt="«action»"/>
			<f:param name="«asVar()»Id" value="#{_«asVar()».id}" />
		</s:link>
	</h:column>
«ENDDEFINE»

«DEFINE genQuickEditLink FOR uml::Class»
	<h:column rendered="#{s:hasPermission('_«asVar()»Category', 'edit') and !_«asVar()»Category.archived}">
		<f:facet name="header">
			<h:outputText value=" " />
		</f:facet>
		<a:commandLink action="#{«asVar()»Action.set«name»IdForModalDlg(_«asVar()».id)}"  rendered="#{s:hasPermission(_«asVar()», 'quickEdit')}" 
			oncomplete="Richfaces.showModalPanel('${modalId}',{});"  reRender="${modalId}" > 
			<h:graphicImage value="/images/icons/editQuick.png" style="border: 0px" alt="Quick Edit"/>
			<s:conversationPropagation type="join"/>
		</a:commandLink>
	</h:column>
«ENDDEFINE»



«DEFINE genDeleteLink FOR uml::Class»
	<h:column rendered="#{s:hasPermission('«asVar()»Action', 'archive')}" propagation="none">
		<f:facet name="header">
			<h:outputText value="" />
		</f:facet>
		
		<a:commandLink rendered="#{!_«asVar()».archived  and «asVar()»Action.hasDeletePrevelige(_«asVar()»)}"  onclick="if (! window.confirm('Are you sure you want to archive #{_«asVar()».displayName}  ?') ) {return false}"
          	action="#{«asVar()»List.archiveById(_«asVar()».id)}" reRender="«asVar()»List"> 
            <h:graphicImage value="/images/icons/delete.png" style="border: 0px" alt="archive"/>  
            
        </a:commandLink> 
		 
		 «REM»comment
		<s:link rendered="#{!_«asVar()».archived}" action="#{«asVar()»Action.archiveById}" onclick="javascript:if(!confirm('Do you really want to delete #{_«asVar()».displayName} ?')){ return false; } else { return true; }" >
			<h:graphicImage value="/images/icons/delete.png" style="border: 0px" alt="archive"/>
			<f:param name="currentEntityId" value="#{_«asVar()».id}"/>
		</s:link>
		«ENDREM»
		
        <s:link rendered="#{_«asVar()».archived and «asVar()»Action.hasDeletePrevelige(_«asVar()»)}" action="#{«asVar()»Action.delete}" onclick="javascript:if(!confirm('Do you really want to permanently delete #{_«asVar()».displayName} ?')){ return false; } else { return true; }"> 
            Delete  
            <f:param name="currentEntityId" value="#{_«asVar()».id}"/>
        </s:link> 
         <rich:spacer/>
        <s:link rendered="#{_«asVar()».archived}" action="#{«asVar()»Action.restore}" > 
            Restore
            <f:param name="currentEntityId" value="#{_«asVar()».id}"/> 
        </s:link> 
		
	</h:column>
«ENDDEFINE»

«DEFINE genAssociation FOR uml::Property»
	<h:column «IF isCompositionContainer()» groupOn="#{«genPropertyLabel()».displayName}" «ENDIF»    «EXPAND genPermission FOR this»>
		<f:facet name="header">
			<ui:include src="/layout/sort.xhtml">
				<ui:param name="entityList" value="#{«getCurrentEntity().asVar()»List}" />
				<ui:param name="propertyLabel" value="«msgBundleKey()-»" />
				<ui:param name="propertyPath" value="«genPropertyLabel()»" />
			</ui:include>
		</f:facet>
		«EXPAND genPropertyValue("_") FOR this»
	</h:column>
«ENDDEFINE»


«DEFINE genAssocValue(String prefix) FOR uml::Property»
	«REM»TODO  link should not be hard coded to path and should be of type action=view«type.name» «ENDREM»
	<s:link «getEscape()»  value="#{«prefix»«genPropertyLabel()».displayName}"  view="«type.getViewFile("view")»" propagation="none">
			<f:param name="«type.name.toFirstLower()»Id" value="#{«prefix»«genPropertyLabel()».id}" />
			<f:param name="from" value="#{request.servletPath}" />
			«IF type.popupInfo != null»
			 <rich:toolTip>
	            <span>
	              #{«prefix»«genPropertyLabel()».popupInfo} 
	            </span>
	        </rich:toolTip>
	        «ENDIF»
	</s:link>
«ENDDEFINE»



«DEFINE genProperty FOR uml::Property-»
	<h:column   «EXPAND genPermission FOR this»>
		<f:facet name="header">
			<ui:include src="/layout/sort.xhtml">
				<ui:param name="entityList" value="#{«getCurrentEntity().asVar()»List}" />
				<ui:param name="propertyLabel" value="«msgBundleKey()-»" />
				<ui:param name="propertyPath" value="«genPropertyLabel()»" />
			</ui:include>
		</f:facet>
		«EXPAND genPropertyValue("_") FOR this»
	</h:column>
«ENDDEFINE»

«DEFINE genPropertyValue(String prefix) FOR uml::Property»
		«IF association != null -»
			«EXPAND genAssocValue(prefix) FOR this»
		«ELSEIF isFile()»
				<s:graphicImage rendered="#{«prefix»«genPropertyLabel()» ne null and  «prefix»«genPropertyLabel()».contentType.startsWith('image')}" value="#{«prefix»«genPropertyLabel()».data}">
					<s:transformImageSize height="100" maintainRatio="true"/>
				</s:graphicImage>
		
				<s:link value="#{«prefix»«genPropertyLabel()».name}"  action="#{«class.asVar()»Action.download«name.toFirstUpper()»(«prefix»«class.asVar()».id)}" 
					propagation="none"  rendered="#{not «prefix»«genPropertyLabel()».contentType.startsWith('image')}" >
					<f:param name="currentEnt	ityId" value="#{«prefix»«class.asVar()».id}" />
          		</s:link> 
		«ELSEIF isDate()»
			<h:outputText value="#{«prefix»«genPropertyLabel()»}">
				<s:convertDateTime type="date" dateStyle="medium" />
			</h:outputText>
		«ELSEIF isBoolean()»
			<h:outputText value="#{«prefix»«genPropertyLabel()»? msg.yes : msg.no }" />	
		«ELSEIF isCurrency()»
			<h:outputText value="#{«prefix»«genPropertyLabel()»}">
				<f:convertNumber pattern="$#,##0.00"/>
			</h:outputText>
		«ELSEIF isDouble()»
			<h:outputText value="#{«prefix»«genPropertyLabel()»}">
				<f:convertNumber pattern="000.00"/>
			</h:outputText>
		«ELSEIF isLargeText()»
			«IF isColumn() && !abbreviateInListing»
				<h:outputText value="#{«prefix»«genPropertyLabel()»}"  escape="false" />	
			«ELSE»
			 <h:panelGroup>
			 <rich:toolTip value="#{«prefix»«genPropertyLabel()»}" for="«name»Abbr">  </rich:toolTip>
	         <h:outputText id="«name»Abbr" value="#{«prefix»«genPropertyLabel()»Abbreviated}" escape="false"/> 
	         </h:panelGroup>
	         «ENDIF»				
		«ELSE»
			<h:outputText value="#{«prefix»«genPropertyLabel()»}"  escape="false" />	
		«ENDIF»
«ENDDEFINE»

«DEFINE genProperty FOR String-»
	<h:column  «EXPAND genPermission FOR this»>
		<f:facet name="header">
			<h:outputText value="«msgBundleKey()-»" />
		</f:facet>
	 <h:outputText  escape="false" value="#{«getCurrentEntity().asVar()».«this»«this == "createdByUser"?".displayName":""»}" />
	</h:column>
«ENDDEFINE»

«DEFINE genPermission FOR uml::Property»
	rendered="#{«genViewPermission()»}"
«ENDDEFINE»

«DEFINE genPermission FOR String»
	rendered="#{s:hasPermission('«this»', 'view«this.toFirstUpper()»' )}"
«ENDDEFINE»





«REM» Creation date and ID  «ENDREM»


«DEFINE genId FOR uml::Class»
	<h:column «EXPAND genPermission FOR 'id'»>
		<f:facet name="header">
			<ui:include src="/layout/sort.xhtml">
				<ui:param name="entityList" value="#{«getCurrentEntity().asVar()»List}" />
				<ui:param name="propertyLabel" value="Id" />
				<ui:param name="propertyPath" value="«getCurrentEntity().asVar()».id" />
			</ui:include>
		</f:facet>
		
		<s:link view="«getViewFile('view')»"  rendered="#{s:hasPermission(_«asVar()», 'view')}" propagation="none">
			<h:outputText    value="#{_«getCurrentEntity().asVar()».id}"  />
			<f:param name="«asVar()»Id" value="#{_«asVar()».id}" />
		</s:link>
		
	</h:column>
«ENDDEFINE»


«DEFINE genCreationDate FOR uml::Class»
	<h:column «EXPAND genPermission FOR 'creationDate'»>
		<f:facet name="header">
			<ui:include src="/layout/sort.xhtml">
				<ui:param name="entityList" value="#{«getCurrentEntity().asVar()»List}" />
				<ui:param name="propertyLabel" value="Creation Date" />
				<ui:param name="propertyPath" value="«getCurrentEntity().asVar()».dateCreated" />
			</ui:include>
		</f:facet>
		<h:outputText    value="#{_«getCurrentEntity().asVar()».dateCreated}"  >
			<s:convertDateTime type="date" dateStyle="medium" />
		</h:outputText>
	</h:column>
«ENDDEFINE»



«DEFINE genArchivedFile FOR uml::Class»
	«FILE getWebPath() +"/list" + name + "Archived." + getExtension()»
		
		<ui:composition «EXPAND WebRoot::genIncludes» template="«getAdminTemplate()»"  >	
			
			<ui:define name="content">
				
				<c:set var="modalId" value="«name»ModalPanel-«name»" />
				<ui:include src="search«name».«getExtension()»" />
				<br/> <br/>
				
				<div id="printable" >
				<ui:include src="list«name»Component.«getExtension()»"  >
					<ui:param name="records" value="#{«asVar()»List.resultListArchived}" />
         		</ui:include>
         		</div>
			
			</ui:define>
		</ui:composition>
	«ENDFILE»
«ENDDEFINE»