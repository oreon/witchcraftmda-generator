«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::associationExtensions»
«EXTENSION template::webExtensions»

«REM»comment
«DEFINE Root FOR uml::Model»
	«EXPAND Root FOREACH allOwnedElements().typeSelect(uml::Package)»
«ENDDEFINE»
«ENDREM»

«DEFINE gen FOR uml::Model»
	«FILE "../resources/META-INF/orm.xml"  man_path_editable -»
<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd"
	version="1.0">
	<description></description>
	
	«EXPAND GenerateEntityMapping FOREACH allOwnedElements().typeSelect(wcprofile::Entity)»
	
	
</entity-mappings>
	«ENDFILE»
«ENDDEFINE»





«DEFINE GenerateEntityMapping FOR wcprofile::Entity»
	<!--  «name»  JPA Configurations -->
	<entity class="«fqn()»" name="«name»">
		<table name="«getTableName()»"  >
		«IF uniqueConstraints != null-»
			«FOREACH uniqueConstraints.getAsListOfLists() AS lst-»
			<unique-constraint>
				«FOREACH lst AS e-»
					<column-name>«e.trim()-»</column-name>
				«ENDFOREACH-»
			</unique-constraint>
			«ENDFOREACH»
		«ENDIF»
		
		
		«IF isMultiTenanted()»
			«FOREACH getAllAttributes() AS p-»
				«IF p.type.name == "uniqueNameType"»
					<unique-constraint>	
					«REM» if uniqunametype property is a column we need to get column name  «ENDREM»
						<column-name>«p.name-»</column-name>
						<column-name>tenant</column-name>
					</unique-constraint>
				«ENDIF»
			«ENDFOREACH»
		«ENDIF»
		</table>
 	«EXPAND genOperation FOREACH getAllOperations()»
 	«EXPAND genFindQry FOREACH getAllAttributes()»
	</entity>
«ENDDEFINE»


«DEFINE genOperation FOR uml::Operation» «ENDDEFINE»


«DEFINE genOperation FOR wcprofile::NamedQueryOp»
	«IF name != null»
	<named-query name="«name-»">
		<query>
			<![CDATA[
			«query»
			]]>
		</query>
	</named-query>
	«ENDIF»
«ENDDEFINE»



«DEFINE genFindQry FOR uml::Property»
	«IF isUnq() »
	<named-query name="«class.name.toFirstLower()».findByUnq«name.toFirstUpper()-»">
		<query>
			<![CDATA[
			select u from «class.name» u where u.«name» = ?1
			]]>
		</query>
	</named-query>
	«ENDIF»
«ENDDEFINE»

