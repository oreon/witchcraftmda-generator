«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::associationExtensions»
«EXTENSION template::javaextensions»


«DEFINE root FOR uml::Model»
	«EXPAND root FOREACH allOwnedElements().typeSelect(uml::Package)»
«ENDDEFINE»


«DEFINE root FOR wcprofile::Service»
 «IF name != null && package != null»
	
	«FILE packagePath() +"/" + name + "Base.java"»
		
		package « packageName() »;
		«EXPAND javagen::pojo::pojoroot::genImports FOR this»
	
		«EXPAND javagen::pojo::pojoroot::genDocumentation FOR this»
		
		«EXPAND javagen::pojo::pojoroot::genBaseClassAnnotations FOR this»
		public class «name»Base «getParent()» «getInterfaces()»{
			
			«EXPAND javagen::pojo::pojoroot::genProperties FOR this»
				
			 «EXPAND genOperations FOR this»
		}
	«ENDFILE»
	
	
	«FILE packagePath() +"/" +name+".java" man_path»
		
		package « packageName() »;
	
		«EXPAND genClassBodyMan FOR this»
	«ENDFILE»
	
	
 «ENDIF»
«ENDDEFINE»


«DEFINE genClassBodyMan FOR wcprofile::Service»
	«EXPAND javagen::pojo::pojoroot::genClassAnnotations FOR this»
	public class «name» extends «name»Base implements java.io.Serializable {
		private static final long serialVersionUID = «serialver()»;
	}
«ENDDEFINE»


«DEFINE genOperations FOR wcprofile::Service»
	 «EXPAND genWrappedOperation FOREACH getAllOperations()»
«ENDDEFINE»


«DEFINE genOperations FOR uml::Class»
«ENDDEFINE»



«DEFINE genWrappedOperation FOR uml::Operation»
      /**
       * «EXPAND javagen::pojo::pojoroot::genDocumentation »
       «FOREACH ownedParameter.select( e | !e.isReturn() ) AS e-»
       * @param «e.name»  «e.type.name» «e.getDocumentation()» 
       *«ENDFOREACH»
       * @return «type.name»
       */
      //@Restrict("#{s:hasPermission('«class.name»','«name»')}")
      «visibility» «getOpReturnType()» «getOpReturnTypeTemplateParam()»  «name» («EXPAND javagen::pojo::pojoroot::genParamSignature») {
      		 
			/*
     		//logger.info("starting «name-» ......" + «EXPAND genParams-» );
	        */
	                
            «IF !isVoid()» «getOpReturnType()» result = «ENDIF» do«name.toFirstUpper()»(«EXPAND genParams-»);
           
           /*
           logger.info("finished «name» ....." «IF !isVoid()» + " returning - " + result«type.name == "List" ?  ".size()  + \" entries \" ": ""» «ENDIF»);
           */
           «IF !isVoid()» return  result  ; «ENDIF» 
      }
     
      /**
       * «ownedComment.body»
       */
      «IF readPropertyDef("generateAbstractMethods","false") == "true"»
       	protected  abstract  «getOpReturnType()» «getOpReturnTypeTemplateParam()»  do«name.toFirstUpper()» («EXPAND javagen::pojo::pojoroot::genParamSignature») ;
      «ELSE»
      	protected «getOpReturnType()» «getOpReturnTypeTemplateParam()»  do«name.toFirstUpper()» («EXPAND javagen::pojo::pojoroot::genParamSignature»){
           «IF type != null» return null; «ENDIF»
      	}
      «ENDIF»
«ENDDEFINE»


«DEFINE methodSignature(String prefix) FOR uml::Operation-»
      
«ENDDEFINE»


 


 «DEFINE genParams FOR uml::Operation-»  
	«FOREACH ownedParameter.select( a |  a.name != ""  ) AS a  SEPARATOR ','-»
	     «a.name-»«REM» TODO - find a mechanism for generalizing many «ENDREM»
	«ENDFOREACH-»
«ENDDEFINE»




