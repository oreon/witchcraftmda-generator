«IMPORT wcprofile»


«EXTENSION template::GeneratorExtensions»
«EXTENSION template::webExtensions»
«EXTENSION template::associationExtensions»

«DEFINE Root FOR wcprofile::Entity»
	 «setAsCurrentEntity(this)-»
	 «EXPAND genEditContainer FOR this»
	 «EXPAND genEditComponent FOR this»
«ENDDEFINE»

«DEFINE genEditContainer FOR wcprofile::Entity»
«FILE getWebPath() +"/edit" +name+ "." + "html"»

<div *ngIf="customer">
  <h2>{{customer.lastName}} details!</h2>
  <div>
    <label>id:={{customer.id}} </label>
  </div>
  <div>

    <form (ngSubmit)="save()" autocomplete="off"  #theForm="ngForm">
    
    	«EXPAND genPropertyRec FOREACH getMineAndParentsAttributes().select(a|!a.isMultivalued() && a.isAttributeEditable() ) -»
 
      	«EXPAND genEditableTable FOREACH getMineAndParentsAttributes().getComposed() -»
      	
      	«EXPAND genButtons FOR this»
	
    
        <label>First Name: </label>
        <input type="text"  required [(ngModel)]="customer.firstName"
        ngControl="firstName"  #name="ngForm"  #spy >
        
        <label>Last Name: </label>
        <md-input type="text"  required
             [(ngModel)]="customer.lastName" >
        </md-input>

    

    </form>
  </div>

</div>
«ENDFILE»
«ENDDEFINE»



«DEFINE genPropertyRec FOR uml::Property-»
	«IF isExpandableAssoc() -» 
		«setCurrentEmbeddable()-» 
		«EXPAND genPropertyRec FOREACH type.getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()  ) -»
		«clearCurrentEmbeddable()-»
	«ELSE-»
		«EXPAND genProperty-»
	«ENDIF»
«ENDDEFINE»


«DEFINE genProperty FOR uml::Property-»

 «EXPAND genInputBegin FOR this»

 «EXPAND genLabel FOR this»

 «IF association != null -»
	«EXPAND genAssocValue FOR this»
 «ELSE»
 	«EXPAND genPropertyInput(type) FOR this»
 «ENDIF»
 
 «EXPAND genMessage FOR this»
 
 «EXPAND genInputEnd FOR this»

«ENDDEFINE»


«DEFINE genPropertyInput(uml::PrimitiveType type) FOR uml::Property»
		
		«IF isFile()»
			<h2>TODO </h2>
		«ELSEIF isDate()»
          <input type="text" class="form-control"  uib-datepicker-popup="dd/MM/yyyy" [(ngModel)]="«genPropertyLabel()»"
      		ng-required="true" close-text="Close" /> 
		«ELSEIF isBoolean()»
            <input radio id="«getId()»" name="«getId()»" type="text" class="form-control" maxlength="50" [(ngModel)]="«genPropertyLabel()»"
                        ng-minlength="2" ng-maxlength="50"/>		
		«ELSEIF isCurrency()»
			 <input id="«getId()»" name="«getId()»" type="text" class="form-control" maxlength="50" [(ngModel)]="«genPropertyLabel()»"
                        ng-minlength="2" ng-maxlength="50"/>
		«ELSEIF isDouble()»
			<md-input id="«getId()»" name="«getId()»" type="text" class="form-control" maxlength="50" [(ngModel)]="«genPropertyLabel()»"
                        ng-minlength="2" ng-maxlength="50" />
		«ELSEIF isLargeText()»
			<textarea  id="«getId()»" name="«getId()»" [(ngModel)]="«genPropertyLabel()»" />
	 	«ELSE»
	 		 <md-input type="text"  required [(ngModel)]="«genPropertyLabel()»" ngControl="«name»"  #name="ngForm" />
		«ENDIF»
«ENDDEFINE»

«DEFINE genPropertyInput(uml::Enumeration enm) FOR uml::Property-»
 <select class="form-control" name="«getId()»" [(ngModel)]="«genPropertyLabel()»"  ng-required="«getRequired()»">
     <option value="">--Select--</option>
     «FOREACH  enm.ownedLiteral AS e-»
     <option value="«e.name»" ng-selected="{{'«e.name»' == vm.«genPropertyLabel()»}}">«e.name»</option>
     «ENDFOREACH»
 </select>
«ENDDEFINE»


«DEFINE genAssocValue FOR uml::Property»
	<select class="form-control" name="«getId()»" [(ngModel)]="«genPropertyLabel()»"  
		ng-options='option.id as option.displayName for option in vm.«name»s' ng-required="true">
    </select>
«ENDDEFINE»



«DEFINE genLabel FOR uml::Property»
«IF !isCurrentMultiMode()»
	 <label for="«getId()»">«name.getVariableNameForDisplay()»</label>
«ENDIF»
«ENDDEFINE»

«DEFINE genMessage FOR uml::Property»
   <div class="alert alert-danger form-group" ng-messages="«name»Form.name.$error" ng-if="«name»Form.name.$touched">
        <p ng-message="minlength">Input is too short.</p>
        <p ng-message="maxlength">Input is too long.</p>
        <p ng-message="required">Input is required.</p>
    </div>
«ENDDEFINE»


«DEFINE genInputBegin FOR uml::Property»
	«IF isCurrentMultiMode()»
		<td> «getOutputMessage()» 
	«ELSE»
		 <div class="form-group">
	«ENDIF»
«ENDDEFINE»


«DEFINE genInputEnd FOR uml::Property»
	 «IF isCurrentMultiMode()»
		</td>
	«ELSE»
		</div>
	«ENDIF»
«ENDDEFINE»

  <li *ngFor="#employeeSkill of employee.employeeSkills;#i = index">



«DEFINE genEditableTable FOR uml::Property-»
	«setCurrentMultiMode(true)-»
	«IF !isPreloadedComposition() -» «EXPAND genNewButton FOR this» «ENDIF»
	<div ng-repeat="«type.asVar()» in «class.asVar()».«name» ">
		«setAsCurrentEntity(type)»
		«EXPAND genAttribAsOutput FOR type-»
		«IF !isPreloadedComposition()»
		  «EXPAND genNew -»
		  «EXPAND genDelete FOR this -»
		«ENDIF»
     </div>
	«setCurrentMultiMode(false)-»
«ENDDEFINE»


«DEFINE genNew FOR uml::Property»
	<td>«EXPAND genNewButton FOR this»</td>
«ENDDEFINE»

«DEFINE genNewButton FOR uml::Property»
	<button (click)="add«name.toFirstUpper()»()">Add</button>
«ENDDEFINE»

«DEFINE genDelete FOR uml::Property»
	<button (click)="remove«name.toFirstUpper()»(i)">Remove</button>
«ENDDEFINE»


«DEFINE genButtons FOR wcprofile::Entity»
	<button type="submit" class="btn btn-default" [disabled]="!theForm.form.valid">Submit</button>
«ENDDEFINE»
