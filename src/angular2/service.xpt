
«IMPORT wcprofile»
«EXTENSION angular2::angular2»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::webExtensions»
«EXTENSION template::associationExtensions»

«DEFINE root FOR wcprofile::Entity»
	«EXPAND genService FOR this»
	«EXPAND genList FOR this»
	«EXPAND genDetail FOR this»
	«EXPAND genEdit FOR this»
«ENDDEFINE»





«DEFINE genService FOR wcprofile::Entity»
«FILE getWebPath() +"/" + name + "Service.ts"»

import {Injectable}     from '@angular/core';
import {Http, Response, Headers, RequestOptions} from '@angular/http';

import {«name»}           from '../common/AppEntities.ts';
import {BaseHttpService} from '../common/BaseHttpService';

@Injectable()
export class «name»Service extends BaseHttpService<«name»>{

  constructor (protected http: Http) {  super(http);}

  getUrl():string{
    return "«asVar()»s";
  }

}
«ENDFILE»
«ENDDEFINE»

«DEFINE genList FOR wcprofile::Entity»
«FILE getWebPath() +"/" + name + "ListComponent.ts"»

import { Component, OnInit, Input } from '@angular/core';
import { Router } from '@angular/router';

import { RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS } from '@angular/router-deprecated';

import { BaseListComponent} from '../common/BaseListComponent'

import { «name»DetailComponent } from './«name»DetailComponent';


import { «name»Service } from './«name»Service';

«EXPAND genRelatedImports FOR this»

let template = require('./«name»ListComponent.html');

@Component({
  selector: '«asVar()»-list',
  template: template,
  providers:[«name»Service],
  directives: [«FOREACH getMineAndParentsAttributes().select(e|e.isMVComposite() ) AS e»«e.type.getListComponent()»,«ENDFOREACH»«name»DetailComponent, ROUTER_DIRECTIVES]
})
export class «name»ListComponent extends BaseListComponent<«name»> implements OnInit {

  @Input()
  «asVar()»List:«name»[];
  
  @Input()
  protected embedded:boolean = false
   
  «asVar()»:«name»;
  errorMessage:string;

  constructor(
  //  private _router: Router,
  protected _«asVar()»Service:«name»Service) { super(_«asVar()»Service); }
  
  setRecords( «asVar()»:«name»[]){this.«asVar()»List = «asVar()»;} 
  getRecords():«name»[]{return this.«asVar()»List;}
  
  ngOnInit() { 
  	super.getBaseEntitys()
  }
  
  getEmbedded():boolean{ return this.embedded}
  
  setRecord( «asVar()»:«name»){this.«asVar()» = «asVar()»;} 
  getRecord():«name»{return this.«asVar()»;}
   
  setViewRecord(«asVar()»:«name»){  }
  
  createInstance():«name» { return <«name»>{}; }
  getSuccessUrl():string { return '«name.asPlural()»'}


//  gotoDetail() {this._router.navigate(['«name»Detail', { id: this.selected«name».id }]);}
}
«ENDFILE»
«ENDDEFINE»


«DEFINE genEdit FOR wcprofile::Entity»
«FILE getWebPath() +"/" + name + "EditComponent.ts"»

«EXPAND genRelatedImports FOR this»

import { Component, Input, OnInit } from '@angular/core';
import { RouteParams, Router } from '@angular/router-deprecated';

import { «name»Service } from './«name»Service';
import { BaseEditComponent } from '../common/BaseEditComponent';

@Component({
  selector: '«asVar()»-edit',
  templateUrl: './app/«asVar()»/«asVar()»EditComponent.html',
  //providers:[«name»Service]
  directives: [  «FOREACH getMineAndParentsAttributes().select(e|e.isMVComposite() ) AS e  SEPARATOR ','»«e.type.getEditComponent()»«ENDFOREACH»]
})
export class «name»EditComponent  extends BaseEditComponent<«name»> implements OnInit {
  
  @Input()
  «asVar()»: «name»;
  
  @Input()
  «asVar()»View: «name»;
    
  @Input()
  protected embedded:boolean = false
  
  «FOREACH getMineAndParentsAttributes().select(e|e.isMVComposite() ) AS e»//«e.type.asVar().getPlural()» : «e.type.name»[]«ENDFOREACH»
  
  «FOREACH getOutgoingAssociations() AS e»  «REM»TODO: should take into account uniqueness e.g mom and dad for student«ENDREM»
  «e.type.asVar().getPlural()» : «e.type.name»[]
  «ENDFOREACH»
  
  constructor(
  	«FOREACH getOutgoingAssociations() AS e  -»  «REM»TODO: should take into account uniqueness e.g mom and dad for student«ENDREM»
    protected _«e.type.asVar()»Service: «e.type.name»Service ,
    «ENDFOREACH»
    protected _eventService:EventService<«name»>,
    protected _«asVar()»Service: «name»Service,
    protected _routeParams: RouteParams,
    protected _router: Router	
  ) {
    super(_eventService, _«asVar()»Service,  _routeParams, _router);
  }
  
   setRecord( «asVar()»:«name»){this.«asVar()» = «asVar()»;} 
   getRecord():«name»{return this.«asVar()»;}
   setViewRecord(«asVar()»:«name»){this.«asVar()»View = «asVar()»;}
   
   «EXPAND successUrl FOR this»
  
  ngOnInit() {
    super.ngOnInit();
    «FOREACH getOutgoingAssociations() AS e-»  «REM»TODO: should take into account uniqueness e.g mom and dad for student«ENDREM»
    this._«e.type.asVar()»Service.getRecords().subscribe(records =>this.«e.type.asVar().getPlural()» = records);
    «ENDFOREACH»
  }
  
  «FOREACH getOutgoingAssociations() AS e»  
   on«e.name.toFirstUpper()»Changed(newValue, index) {
    this.getRecord().«e.name» = newValue;
  }
  «ENDFOREACH»
  
  «FOREACH getMineAndParentsAttributes().select(e|e.isMVComposite() ) AS e»
  add«e.name.toFirstUpper()»(){
   if(!this.«asVar()».«e.name») this.«asVar()».«e.name» = [];
   this.«asVar()».«e.name».push(<«e.type.name»>{});
  }

  remove«e.name.toFirstUpper()»(index:number){this.«asVar()».«e.name».splice(index, 1);}

  on«e.name.toFirstUpper()»Changed(newValue, index) {console.log(newValue);}
  «ENDFOREACH»


}
«ENDFILE»
«ENDDEFINE»



«DEFINE genDetail FOR wcprofile::Entity»
«FILE getWebPath() +"/" + getDetailComponent() + ".ts"»

«EXPAND genRelatedImports FOR this»

import { Component, Input, OnInit } from '@angular/core';
import { RouteParams, Router } from '@angular/router-deprecated';

import { «name»Service } from './«name»Service';
import { «name»EditComponent} from './«name»EditComponent';
import { BaseDetailComponent } from '../common/BaseDetailComponent';

@Component({
  selector: '«asVar()»-detail',
  templateUrl: './app/«asVar()»/«asVar()»DetailComponent.html',
  //providers:[«name»Service]
  directives: [ «name»EditComponent, «FOREACH getMineAndParentsAttributes().select(e|e.isMVComposite() ) AS e  SEPARATOR ','»«e.type.getListComponent()»«ENDFOREACH»]
})
export class «name»DetailComponent  extends BaseDetailComponent<«name»> implements OnInit {
  
  @Input()
  «asVar()»: «name»;
  
  @Input()
  «asVar()»View: «name»;

  @Input()
  protected embedded:boolean = false
  
  constructor(
  	protected _eventService:EventService<«name»>,
    protected _«asVar()»Service: «name»Service,
    protected _routeParams: RouteParams,
    protected _router: Router	
  ) {
    super( _eventService, _«asVar()»Service,  _routeParams, _router);
  }
  
   setRecord( «asVar()»:«name»){this.«asVar()» = «asVar()»;} 
   getRecord():«name»{return this.«asVar()»;}
   
   setViewRecord(«asVar()»:«name»){  this.«asVar()»View = «asVar()»;}
   
   «EXPAND successUrl FOR this»
  
  ngOnInit() {
    super.ngOnInit();
  }

}
«ENDFILE»
«ENDDEFINE»

«DEFINE successUrl FOR wcprofile::Entity»
 createInstance():«name» { 
 	«IF getCompositionParent() != null»
    if (this.parent){
       return <«name»>{«getCompositionParent().name»:<any>this.parent}
    }
    «ENDIF»
    return <«name»>{}; 
  }

  getSuccessUrl():string { 
  	«IF getCompositionParent() != null»
    if (this.parent){
      return '/«getCompositionParent().type.name»Detail'  
    }
    «ENDIF»
    return '«name.asPlural()»'
  }
«ENDDEFINE»
  

«DEFINE genRelatedImports FOR   wcprofile::Entity»

	import {«name»} from '../common/AppEntities';
	import { EventService} from '../common/EventService'
	  
	«FOREACH getNonRecursiveOutgoingAssociations() AS e»
	import {«e.type.name»Service} from '../«e.type.asVar()»/«e.type.name»Service'
	import {«e.type.name»} from '../common/AppEntities';
	«ENDFOREACH»
	
	«FOREACH getMineAndParentsAttributes().select(e|e.isMVComposite() ) AS e»
	import {«e.type.getEditComponent()»} from '../«e.type.asVar()»/«e.type.getEditComponent()»';
	import {«e.type.getListComponent()»} from '../«e.type.asVar()»/«e.type.getListComponent()»';
	import {«e.type.name»} from '../common/AppEntities';
	«ENDFOREACH»

«ENDDEFINE»
