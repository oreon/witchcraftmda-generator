«IMPORT wcprofile»


«EXTENSION template::GeneratorExtensions»
«EXTENSION template::djangoExtensions»
«EXTENSION template::associationExtensions»

«DEFINE Root FOR uml::Model»
	«REM»comment
	«EXPAND genApi FOR this»
	«EXPAND routes::Root FOREACH allOwnedElements().typeSelect(wcprofile::Entity)»
	«ENDREM»
	«FILE 'common/AppEntities.ts'»
	import {BaseEntity} from './BaseEntity';
	«EXPAND pojoGen FOREACH allOwnedElements().typeSelect(wcprofile::AbstractEntity)»
	«ENDFILE»
	
	«EXPAND indexGen FOR this»
	
	«FILE 'app.ts'»
	«EXPAND appImportsGen FOREACH allOwnedElements().typeSelect(wcprofile::Entity)»
	«EXPAND appRoutesGen FOREACH allOwnedElements().typeSelect(wcprofile::Entity)»
	«ENDFILE»
	
	«FILE 'navigation.ts'»
	<md-nav-list>
	«EXPAND navgen FOREACH allOwnedElements().typeSelect(wcprofile::Entity).select(a|!a.isLeaf())»
	</md-nav-list>
	«ENDFILE»
	
	
	«EXPAND ListUI::Root FOREACH allOwnedElements().typeSelect(wcprofile::Entity)»
	«EXPAND service::root FOREACH allOwnedElements().typeSelect(wcprofile::Entity)»	
«ENDDEFINE»

«DEFINE pojoGen FOR wcprofile::AbstractEntity»
export interface «name»  «getParentOrDefault("BaseEntity")» {
  «FOREACH getAllAttributes() AS e-»
   «e.name»: «IF e.isString()» string «ELSEIF e.type.isPrimitive()»  «e.type.name.toFirstLower()»  «ELSE»  «e.type.name» «ENDIF»  «IF e.isMultivalued()»[]«ENDIF»
  «ENDFOREACH»
}
«ENDDEFINE»

«DEFINE appImportsGen FOR wcprofile::Entity-»
import {«name»ListComponent} from './«asVar()»/«name»ListComponent'
import {«name»DetailComponent} from './«asVar()»/«name»DetailComponent'
«ENDDEFINE»

«DEFINE appRoutesGen FOR wcprofile::Entity-»
  { path: '/«asVar().getPlural()»',  name: '«name.asPlural()»',  component: «name»ListComponent },
  { path: '/«asVar().getPlural()»/:id',  name: '«name»Detail',  component: «name»DetailComponent },
«ENDDEFINE»

«DEFINE indexGen FOR uml::Model»
«FILE 'index.ts'»

export * from './app.component';
export * from './app.service';

import {AppState} from './app.service';

«FOREACH  allOwnedElements().typeSelect(wcprofile::Entity) AS e-»
import {«e.name»Service} from './«e.asVar()»/«e.name»Service'
«ENDFOREACH»

// Application wide providers
export const APP_PROVIDERS = [
  AppState,
  «FOREACH  allOwnedElements().typeSelect(wcprofile::Entity) AS e-»
  	«e.name»Service,
  «ENDFOREACH»
];
«ENDFILE»
«ENDDEFINE»




«DEFINE navgen FOR wcprofile::Entity»
   <a md-list-item [routerLink]="['«name.asPlural()»']">«name.asPlural()»</a>
«ENDDEFINE»



