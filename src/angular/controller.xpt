«IMPORT wcprofile»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::webExtensions»
«EXTENSION template::associationExtensions»

«DEFINE root FOR wcprofile::Entity»
«FILE getWebPath() +"/" +name+ "Controller.js"»
(function () {
    'use strict';

    angular
        .module('app.«asVar()»')
        .controller('«name»Controller',  «name»Controller);

     «name»Controller.$inject = ['logger',
        '$stateParams',
        '$location',
        'TableSettings',
        'ngTableParams',
        'Api',];
    /* @ngInject */
    function  «name»Controller(logger,
        $stateParams,
        $location,
        TableSettings,
        ngTableParams,
        Api
        ) {

        var vm = this;
      
        vm.«asVar()»s = [];
        vm.tableParams =   new ngTableParams( );//TableSettings.getParams( «name»);
        vm.«asVar()» = {};
       
     
        activate();

        function activate() {
            if(!$stateParams.id){
                vm.tableParams.settings({dataset: vm.«asVar()»s});
                get«name»s();
            };
        }
        
        vm.toEdit«name» = function(){
            Api.get«name»ForEdit($stateParams.id).then(function(data) {  
                 vm.«asVar()» = data
                 «FOREACH getOutgoingAssociations() AS e»
                 get«e.name.toFirstUpper()»s();
                 «ENDFOREACH»
            });
        }
        
         vm.toView«name» = function(){
            Api.get«name»($stateParams.id).then(function(data) {  
                  vm.«asVar()» = data
            });
        }
        
        function get«name»s() {
            return Api.get«name»s()
                .then(function(data) {
                    vm.«asVar()»s = data;
                    logger.info('Activated  «name»s View');
                    return vm.«asVar()»s;
                });
        }
        
        
        
      «FOREACH getOutgoingAssociations() AS e»
      
       vm.«e.name»s  = [];
       
		function get«e.name.toFirstUpper()»s() {
            return Api.get«e.name.toFirstUpper()»s()
                .then(function(data) {
                    vm.«e.name»s = data;
                });
        }
	  «ENDFOREACH»
        
       
        vm.create = function() {
            /* if(!vm.«asVar()».id )
                vm.«asVar()».dob = "1988-11-01";*/
        };
        
        vm.remove = function( «asVar()»){
            return Api.remove«name»( «asVar()»).then(function (data){  
                logger.success('«name» Deleted');
                $location.path('«asVar()»');
            });
        }
 
        vm.update = function() {
        	var msg = 'updated';
            if(!vm.«asVar()».id ){
                vm.create();
                msg = 'created';
            }
        
            return Api.save«name»(vm.«asVar()»).then(function (data){  
                logger.success('«name» ' + msg);
                $location.path('«asVar()»/' + data.id);
            });
        };
    
    }

})();
«ENDFILE»

«ENDDEFINE»