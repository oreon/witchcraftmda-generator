«IMPORT wcprofile»

«EXTENSION org::openarchitectureware::uml2::profile::profiling»
«EXTENSION template::GeneratorExtensions»
«EXTENSION template::webExtensions»
«EXTENSION template::associationExtensions»

«DEFINE Root FOR wcprofile::Entity»
	 «setAsCurrentEntity(this)-»
	 «EXPAND genEditContainer FOR this»
	 «EXPAND genEditComponent FOR this»
«ENDDEFINE»

«DEFINE genEditContainer FOR wcprofile::Entity»
«FILE getWebPath() +"/edit" +name+ "." + "tpl"»

<ui:composition «EXPAND genImports FOR this»
                template="/layout/stub/clientXpress.seam">

    <!--selected script/css includes file-->
    <ui:param name="layout_jsIncludes" value="/layout/scripts/cxpImports.seam"/>
    <!--selected tab template file-->
    <ui:param name="layout_tabTemplate" value="/layout/menu/tabSelectionOperations.seam"/>
    <!--selected left nav template file-->
    <ui:param name="layout_navTemplate" value="/layout/menu/nav/operationsClientXpressProfile.seam"/>

    <ui:param name="layout_pageTitle" value="#{uvs:label('PROFILES')}"/>
    <ui:param name="step" value="library"/>

    <ui:define name="page-header">
        <ui:include src="/cxp/operations/controls/clientProfileTabs.seam"/>
    </ui:define>

    <ui:define name="page-content">
    	<ui:include src="edit«name»Component.tpl" />
    </ui:define>
</ui:composition>
«ENDFILE»
«ENDDEFINE»



«DEFINE genEditComponent FOR wcprofile::Entity»
«FILE getWebPath() +"/edit" +name+ "Component." + "tpl"»


<ui:composition xmlns="http://www.w3.org/1999/xhtml"
«EXPAND genImports FOR this»
 >
 <div>
          
    <h:panelGroup id="panelProfiles" layout="block">
          «EXPAND genAttribAsOutput FOR this»
     <h:panelGroup>  
</div>   
</ui:composition>
«ENDFILE»
«ENDDEFINE»


«DEFINE genAttribAsOutput FOR uml::Class-»
	«FOREACH allParents() AS e-»
	 «EXPAND genPropertyRec FOREACH e.getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()  ) -»
	«ENDFOREACH»
	«EXPAND genPropertyRec FOREACH getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()   ) -»
«ENDDEFINE»

«DEFINE genPropertyRec FOR uml::Property-»
	«IF isExpandableAssoc() -» 
		«setCurrentEmbeddable()-» 
		«EXPAND genPropertyRec FOREACH type.getAllAttributes().select(a|!a.isMultivalued() && !a.isSecret()  ) -»
		«clearCurrentEmbeddable()-»
	«ELSE-»
		«EXPAND genAttribute -»
	«ENDIF»
«ENDDEFINE»

«DEFINE genAttribute FOR uml::Property -»
	«EXPAND genProperty FOR this-»
«ENDDEFINE»


«DEFINE genPropertyEntry(uml::Enumeration enm) FOR uml::Property-»
	<h:selectOneMenu id="«getId()»"  rendered="#{«genEditPermission()»}" value="#{«getActionForMode()»«genPropertyLabel()»}" required="«getRequired()»" 
	  label="«msgBundleKey()»">
		<f:selectItem itemLabel="Please Select..." itemValue="" />
		«FOREACH  enm.ownedLiteral AS e-»
		<f:selectItem itemValue="«e.name»"  itemLabel="#{msg.«e.name-»}" />
		«ENDFOREACH»
	</h:selectOneMenu>
«ENDDEFINE»



«DEFINE genAssocValue(String prefix) FOR uml::Property»
	<div class="cxp_inputBlock">
	<h:outputText value="#{uvs:label('«getId().toUpperCase()»')}" styleClass="cxp_leftFixWidthLabel"/>
	<h:selectOneMenu id="«getId()»" value="#{«genPropertyLabel()-»}" required="«!getAssocOptional()»">
		<s:selectItems value="#{«type.asVar()»List}" var="itemIter"
			label="#{itemIter.displayName}"
			noSelectionLabel="Please Select..." />
		<s:convertEntity />
	</h:selectOneMenu>
	</div>
«ENDDEFINE»



«DEFINE genProperty FOR uml::Property-»
 «EXPAND genPropertyValue("") FOR this»
«ENDDEFINE»

«DEFINE genPropertyValue(String prefix) FOR uml::Property»
		«IF association != null -»
			«EXPAND genAssocValue(prefix) FOR this»
		«ELSEIF isFile()»
				<s:graphicImage rendered="#{«prefix»«genPropertyLabel()» ne null and  «prefix»«genPropertyLabel()».contentType.startsWith('image')}" value="#{«prefix»«genPropertyLabel()».data}">
					<s:transformImageSize height="100" maintainRatio="true"/>
				</s:graphicImage>
		
				<s:link value="#{«prefix»«genPropertyLabel()».name}"  action="#{«class.asVar()»Action.download«name.toFirstUpper()»(«prefix»«class.asVar()».id)}" 
					propagation="none"  rendered="#{not «prefix»«genPropertyLabel()».contentType.startsWith('image')}" >
					<f:param name="currentEntityId" value="#{«prefix»«class.asVar()».id}" />
          		</s:link> 
		«ELSEIF isDate()»
			 <div class="cxp_inputBlock">
                <h:outputText value="#{uvs:label('«getId().toUpperCase()»')}" styleClass="cxp_leftFixWidthLabel"/>
                   <p:calendar id="«getId()»" value="#{«genPropertyLabel()»}" showOn="button" />
                <h:message for="«getId()»"/>
            </div>
		«ELSEIF isBoolean()»
			<div class="cxp_inputBlock">
                <div class="cxp_topLabel">
                    <h:outputText value="#{uvs:label('«getId().toUpperCase()»'}"/>
                </div>
                <h::selectBooleanCheckbox id="«getId()»" value="#{«genPropertyLabel()»}" />
            </div>		
		«ELSEIF isCurrency()»
			<h:outputText value="#{«prefix»«genPropertyLabel()»}">
				<f:convertNumber pattern="$#,##0.00"/>
			</h:outputText>
		«ELSEIF isDouble()»
			<h:outputText value="#{«prefix»«genPropertyLabel()»}">
				<f:convertNumber pattern="000.00"/>
			</h:outputText>
		«ELSEIF isLargeText()»
			<div class="cxp_inputBlock">
                <div class="cxp_topLabel">
                    <h:outputText value="#{uvs:label('«getId().toUpperCase()»'}"/>
                </div>
                <h:inputTextarea id="«getId()»" value="#{«genPropertyLabel()»}" cols="55" rows="5" maxlength="800" styleClass="cxp_descriptionInput"/>
            </div>			
	 	«ELSE»
		  <div class="cxp_inputBlock">
		  «type.name»
                <h:outputText value="#{uvs:label('«getId().toUpperCase()»')}" styleClass="cxp_leftFixWidthLabel"/>
                <h:inputText id="«getId()»"  value="#{«genPropertyLabel()»}" 
                	maxlength="40" styleclass="cxp_singleLineTextInput"
                   />
                <h:message for="«getId()»"/>
            </div>
		«ENDIF»
«ENDDEFINE»



«DEFINE genImports FOR uml::Class»
	xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:c="http://java.sun.com/jstl/core"
                xmlns:uvs="http://www.univeris.com/jsf/ewms/8.x"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:s="http://jboss.com/products/seam/taglib"
                xmlns:a="http://richfaces.org/a4j"
                xmlns:rich="http://richfaces.org/rich"
«ENDDEFINE»




«DEFINE genEditableTable FOR uml::Property-»
	
	«IF !isPreloadedComposition() -» «EXPAND genNewButton FOR this» «ENDIF»
	<rich:dataTable id="«name»" var="«type.asVar()»" rendered="#{«genEditPermission()»}"
				value="#{«class.getAction()».list«name.toFirstUpper()»}" 
				rowKeyVar="rowIndex" 
				rowClasses="odd, even" styleClass="viewInfo" rules="all">
		«setAsCurrentEntity(type)»
		«EXPAND genAttribAsOutput FOR type-»
		
		 «IF !isPreloadedComposition()»
		  «EXPAND genNew -»
		  «EXPAND genDelete FOR this -»
		 «ENDIF»
	</rich:dataTable>
	«ENDIF»
«ENDDEFINE»
